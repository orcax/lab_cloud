<?xml version="1.0" encoding="UTF-8"?><templates><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="PRJController">package com.prj.controller;&#13;
&#13;
import java.util.ArrayList;&#13;
import java.util.List;&#13;
&#13;
import javax.annotation.Resource;&#13;
import javax.servlet.http.HttpServletRequest;&#13;

&#13;
import org.hibernate.criterion.SimpleExpression;&#13;
import org.springframework.beans.factory.annotation.Autowired;&#13;
import org.springframework.stereotype.Controller;&#13;
import org.springframework.ui.Model;&#13;
import org.springframework.web.bind.annotation.PathVariable;&#13;
import org.springframework.web.bind.annotation.RequestBody;&#13;
import org.springframework.web.bind.annotation.RequestMapping;&#13;
import org.springframework.web.bind.annotation.RequestMethod;&#13;
import org.springframework.web.bind.annotation.ResponseBody;&#13;
&#13;
import com.prj.entity.${EntityName};&#13;
import com.prj.service.${EntityName}Service;&#13;
import com.prj.util.JsonUtil;&#13;
import com.prj.util.Page;&#13;
import com.prj.util.RequestHelper;&#13;

&#13;
@Controller&#13;
@RequestMapping(value = "/${EntityName}")&#13;
public class ${EntityName}Controller {&#13;
&#13;
	@Resource(name = "${EntityName}ServiceImpl")&#13;
	${EntityName}Service vs;&#13;
	
&#13;
	@Autowired&#13;
	JsonUtil jsonutil;&#13;
&#13;
	@RequestMapping(value = "/table", method = RequestMethod.GET)&#13;
	public String IndexView(Model model) {&#13;
		return "${EntityName}/table";&#13;
	}&#13;
&#13;
	@RequestMapping(value = "/all", method = RequestMethod.GET)&#13;
	@ResponseBody&#13;
	public List&lt;${EntityName}&gt; List${EntityName}(Model model) {&#13;
		return vs.getAll${EntityName}();&#13;
	}&#13;
&#13;
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)&#13;
	@ResponseBody&#13;
	public ${EntityName} get${EntityName}(@PathVariable int id) {&#13;
		return vs.get${EntityName}ById(id);&#13;
	}&#13;
&#13;
	@RequestMapping(value = "/delete/{id}", method = RequestMethod.DELETE)&#13;
	@ResponseBody&#13;
	public boolean delete${EntityName}(@PathVariable int id) {&#13;
		${EntityName} v = new ${EntityName}();&#13;
		v.setId(id);&#13;
		return vs.delete${EntityName}(v);&#13;
	}&#13;
&#13;
	@RequestMapping(value = "/add", method = RequestMethod.POST)&#13;
	@ResponseBody&#13;
	public boolean add${EntityName}(@RequestBody String data) {&#13;
		System.out.println("json string:" + data);&#13;
		${EntityName} v = jsonutil.toObject(data, ${EntityName}.class);&#13;
		return vs.add${EntityName}(v);&#13;
	}&#13;
&#13;
	@RequestMapping(value = "/update", method = RequestMethod.PUT)&#13;
	@ResponseBody&#13;
	public ${EntityName} update${EntityName}(@RequestBody String data) {&#13;
		${EntityName} v = jsonutil.toObject(data, ${EntityName}.class);&#13;
		return vs.update${EntityName}(v);&#13;
	}&#13;
	
&#13;
	@RequestMapping(value = "/conditions/{page_number}/{page_size}", method = RequestMethod.GET)&#13;
	@ResponseBody&#13;
	public Page&lt;${EntityName}&gt; getTaxByConditions(@PathVariable int page_number,@PathVariable int page_size, HttpServletRequest request) {&#13;
		String[] parameters = { "year", "month" };&#13;
		
		ArrayList&lt;SimpleExpression&gt; list = RequestHelper.parseParameters(request, parameters);&#13;
		
		return vs.getByPageWithConditions(page_number, page_size, list);&#13;
	}&#13;
}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="PRJDao">package com.prj.dao;&#13;
&#13;
import java.util.List;&#13;
&#13;
import org.hibernate.criterion.SimpleExpression;&#13;
import com.prj.entity.${EntityName};&#13;
import com.prj.util.Page;&#13;
&#13;
public interface ${EntityName}Dao {&#13;
	boolean add${EntityName}(${EntityName} v);&#13;
	boolean delete${EntityName}(${EntityName} v);&#13;
	${EntityName} find${EntityName}byId(int id);&#13;
	List&lt;${EntityName}&gt; getAll${EntityName}();&#13;
	${EntityName} update${EntityName}(${EntityName} v);&#13;
	Page&lt;${EntityName}&gt; get${EntityName}byPage(int pagenumber,int pagesize);&#13;
	List&lt;${EntityName}&gt; getByCondition(List&lt;SimpleExpression&gt; list);
	Page&lt;${EntityName}&gt; getByPageWithConditions(int pagenumber, int pagesize, List&lt;SimpleExpression&gt; list);
	
}&#13;


</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="PRJDaoImpl">package com.prj.daoImpl;&#13;
&#13;
import java.util.List;&#13;
&#13;
import org.apache.log4j.Logger;&#13;
import org.hibernate.Session;&#13;
import org.hibernate.SessionFactory;&#13;
import org.hibernate.criterion.SimpleExpression;&#13;
import org.springframework.beans.factory.annotation.Autowired;&#13;
import org.springframework.stereotype.Service;&#13;
&#13;
import com.prj.dao.${EntityName}Dao;&#13;
import com.prj.entity.${EntityName};&#13;
import com.prj.util.Page;&#13;
@Service("${EntityName}DaoImpl")&#13;
public class ${EntityName}DaoImpl implements ${EntityName}Dao {&#13;
&#13;
	@Autowired&#13;
	protected SessionFactory sessionFactory;&#13;
	&#13;
	@Autowired&#13;
	CommonDao commonDao;&#13;
	&#13;
	private static Logger logger = Logger.getLogger(${EntityName}DaoImpl.class);&#13;
	&#13;
	public boolean add${EntityName}(${EntityName} v) {&#13;
		// TODO Auto-generated method stub&#13;
		return commonDao.addObject(v);&#13;
	}&#13;
&#13;
	&#13;
	public boolean delete${EntityName}(${EntityName} v) {&#13;
		// TODO Auto-generated method stub&#13;
		return commonDao.deleteObject(v);&#13;
	}&#13;
&#13;
	&#13;
	public ${EntityName} find${EntityName}byId(int id) {&#13;
		// TODO Auto-generated method stub&#13;
		Session session=sessionFactory.openSession();&#13;
		${EntityName} v=null;&#13;
		v=(${EntityName}) session.get(${EntityName}.class, id);&#13;
		return v;&#13;
		&#13;
	}&#13;
&#13;
	&#13;
	public List&lt;${EntityName}&gt; getAll${EntityName}() {&#13;
		// TODO Auto-generated method stub&#13;
        &#13;
        &#13;
        return commonDao.getAllObject("com.prj.entity.${EntityName}");&#13;
	}&#13;
&#13;
	&#13;
	public ${EntityName} update${EntityName}(${EntityName} v) {&#13;
		// TODO Auto-generated method stub&#13;
		return (${EntityName}) commonDao.updateObject(v);&#13;
	}&#13;
&#13;
	&#13;
	public Page&lt;${EntityName}&gt; get${EntityName}byPage(int pagenumber, int pagesize) {&#13;
		// TODO Auto-generated method stub&#13;
        &#13;
        &#13;
		return commonDao.getObjectbyPage("com.prj.entity.${EntityName}", pagenumber, pagesize);&#13;
	}&#13;
&#13;
	public Page&lt;${EntityName}&gt; getByPageWithConditions(int pagenumber, int pagesize,&#13;
			List&lt;SimpleExpression&gt; list) {&#13;
		return commonDao.getByPageWithConditions("com.prj.entity.${EntityName}",pagenumber, pagesize, list);&#13;
	}&#13;
&#13;
	public List&lt;${EntityName}&gt; getByCondition(List&lt;SimpleExpression&gt; list) {&#13;
		return commonDao.getByConditions("com.prj.entity.${EntityName}", list);&#13;
	}&#13;
&#13;

}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="PRJService">package com.prj.service;&#13;
&#13;
import java.util.List;&#13;
&#13;
import org.hibernate.criterion.SimpleExpression;&#13;
&#13;
import com.prj.entity.${EntityName};&#13;
import com.prj.util.Page;&#13;
&#13;
public interface ${EntityName}Service {&#13;
	List&lt;${EntityName}&gt; getAll${EntityName}();&#13;
&#13;
	boolean delete${EntityName}(${EntityName} entity);&#13;
&#13;
	boolean add${EntityName}(${EntityName} entity);&#13;
&#13;
	${EntityName} update${EntityName}(${EntityName} entity);&#13;
&#13;
	${EntityName} get${EntityName}ById(int id);&#13;
&#13;
	Page&lt;${EntityName}&gt; get${EntityName}byPage(int pagenumber, int pagesize);&#13;
&#13;
	Page&lt;${EntityName}&gt; search${EntityName}(int pagenumber, int pagesize, String name);&#13;
&#13;
	Page&lt;${EntityName}&gt; getByPageWithConditions(int pagenumber, int pagesize,List&lt;SimpleExpression&gt; list);&#13;	
&#13;	
}&#13;
&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="PRJServiceImpl">package com.prj.serviceImpl;&#13;
&#13;
import java.util.List;&#13;
&#13;
import javax.annotation.Resource;&#13;
&#13;
import org.hibernate.criterion.SimpleExpression;&#13;
import org.springframework.stereotype.Service;&#13;
&#13;
import com.prj.dao.${EntityName}Dao;&#13;
import com.prj.entity.${EntityName};&#13;
import com.prj.service.${EntityName}Service;&#13;
import com.prj.util.Page;&#13;
&#13;
@Service("${EntityName}ServiceImpl")&#13;
public class ${EntityName}ServiceImpl implements ${EntityName}Service {&#13;
&#13;
	@Resource(name = "${EntityName}DaoImpl")&#13;
	${EntityName}Dao dao;&#13;
&#13;
	&#13;
	public List&lt;${EntityName}&gt; getAll${EntityName}() {&#13;
		return dao.getAll${EntityName}();&#13;
	}&#13;
&#13;
	&#13;
	public boolean delete${EntityName}(${EntityName} v) {&#13;
		return dao.delete${EntityName}(v);&#13;
	}&#13;
&#13;
	&#13;
	public boolean add${EntityName}(${EntityName} v) {&#13;
		return dao.add${EntityName}(v);&#13;
	}&#13;
&#13;
	&#13;
	public ${EntityName} update${EntityName}(${EntityName} v) {&#13;
		return dao.update${EntityName}(v);&#13;
	}&#13;
&#13;
	&#13;
	public ${EntityName} get${EntityName}ById(int id) {&#13;
		return dao.find${EntityName}byId(id);&#13;
	}&#13;
&#13;
	&#13;
	public Page&lt;${EntityName}&gt; get${EntityName}byPage(int pagenumber, int pagesize) {&#13;
		return dao.get${EntityName}byPage(pagenumber, pagesize);&#13;
	}&#13;
&#13;
	&#13;
	public Page&lt;${EntityName}&gt; search${EntityName}(int pagenumber, int pagesize,&#13;
			String name) {&#13;
		//return dao.search${EntityName}(pagenumber, pagesize, name);&#13;
		return null;&#13;
	}&#13;
&#13;
	public Page&lt;${EntityName}&gt; getByPageWithConditions(int pagenumber, int pagesize,List&lt;SimpleExpression&gt; list) {&#13;
		return dao.getByPageWithConditions(pagenumber, pagesize, list);&#13;
	}&#13;
&#13;
}&#13;
</template></templates>